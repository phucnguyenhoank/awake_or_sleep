#ifndef RANDOM_FOREST_MODEL_H
#define RANDOM_FOREST_MODEL_H

const int n_trees = 5;

// Tree 0
const int tree_0_n_nodes = 25;
const int tree_0_children_left[] = { 1, 2, 3, 4, -1, -1, -1, 8, 9, -1, -1, 12, -1, -1, 15, 16, -1, -1, 19, 20, -1, -1, 23, -1, -1 };
const int tree_0_children_right[] = { 14, 7, 6, 5, -1, -1, -1, 11, 10, -1, -1, 13, -1, -1, 18, 17, -1, -1, 22, 21, -1, -1, 24, -1, -1 };
const int tree_0_feature[] = { 6, 2, 1, 6, -2, -2, -2, 0, 2, -2, -2, 2, -2, -2, 5, 1, -2, -2, 0, 0, -2, -2, 0, -2, -2 };
const float tree_0_threshold[] = { 0.7197525203227997, 0.7487120032310486, 0.5446992218494415, 0.15538811834994704, -2.0, -2.0, -2.0, 0.42857038974761963, 0.8208356499671936, -2.0, -2.0, 0.7741842567920685, -2.0, -2.0, 0.6713307797908783, 0.5526104420423508, -2.0, -2.0, 0.48170527815818787, 0.4555715173482895, -2.0, -2.0, 0.5148063600063324, -2.0, -2.0 };
const int tree_0_class[] = { 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1 };

// Tree 1
const int tree_1_n_nodes = 9;
const int tree_1_children_left[] = { 1, 2, -1, -1, 5, 6, -1, -1, -1 };
const int tree_1_children_right[] = { 4, 3, -1, -1, 8, 7, -1, -1, -1 };
const int tree_1_feature[] = { 1, 6, -2, -2, 3, 2, -2, -2, -2 };
const float tree_1_threshold[] = { 0.5858384668827057, 0.15291923307813704, -2.0, -2.0, 0.5967487096786499, 0.8709214925765991, -2.0, -2.0, -2.0 };
const int tree_1_class[] = { 0, 0, 1, 0, 1, 1, 1, 0, 1 };

// Tree 2
const int tree_2_n_nodes = 23;
const int tree_2_children_left[] = { 1, 2, 3, -1, 5, -1, -1, 8, -1, -1, 11, 12, -1, 14, -1, -1, 17, 18, -1, -1, 21, -1, -1 };
const int tree_2_children_right[] = { 10, 7, 4, -1, 6, -1, -1, 9, -1, -1, 16, 13, -1, 15, -1, -1, 20, 19, -1, -1, 22, -1, -1 };
const int tree_2_feature[] = { 2, 3, 2, -2, 4, -2, -2, 1, -2, -2, 4, 0, -2, 1, -2, -2, 4, 6, -2, -2, 1, -2, -2 };
const float tree_2_threshold[] = { 0.7696050107479095, 0.5329449772834778, 0.724384605884552, -2.0, 0.6026415526866913, -2.0, -2.0, 0.4786392152309418, -2.0, -2.0, 0.600773811340332, 0.431183397769928, -2.0, 0.5399522930383682, -2.0, -2.0, 0.6531619727611542, 0.1526965058874339, -2.0, -2.0, 0.5336233973503113, -2.0, -2.0 };
const int tree_2_class[] = { 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1 };

// Tree 3
const int tree_3_n_nodes = 9;
const int tree_3_children_left[] = { 1, 2, -1, -1, 5, 6, -1, -1, -1 };
const int tree_3_children_right[] = { 4, 3, -1, -1, 8, 7, -1, -1, -1 };
const int tree_3_feature[] = { 1, 6, -2, -2, 1, 1, -2, -2, -2 };
const float tree_3_threshold[] = { 0.5874206125736237, 0.15291923307813704, -2.0, -2.0, 0.6277687847614288, 0.6242086291313171, -2.0, -2.0, -2.0 };
const int tree_3_class[] = { 0, 0, 1, 0, 1, 1, 1, 0, 1 };

// Tree 4
const int tree_4_n_nodes = 15;
const int tree_4_children_left[] = { 1, 2, -1, 4, 5, -1, -1, -1, 9, -1, 11, -1, 13, -1, -1 };
const int tree_4_children_right[] = { 8, 3, -1, 7, 6, -1, -1, -1, 10, -1, 12, -1, 14, -1, -1 };
const int tree_4_feature[] = { 1, 2, -2, 2, 4, -2, -2, -2, 3, -2, 0, -2, 2, -2, -2 };
const float tree_4_threshold[] = { 0.5858384668827057, 0.8288494348526001, -2.0, 0.8308528065681458, 0.5783153176307678, -2.0, -2.0, -2.0, 0.692889392375946, -2.0, 0.47299523651599884, -2.0, 0.7369776368141174, -2.0, -2.0 };
const int tree_4_class[] = { 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0 };

#endif
